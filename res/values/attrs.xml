<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PullToZoomView">
        <attr name="headerView" format="reference" />
        <attr name="contentView" format="reference" />
        <attr name="zoomView" format="reference" />
        <attr name="isHeaderParallax" format="boolean" />
    </declare-styleable>
    
    <declare-styleable name="FancyCoverFlow">
        <attr name="unselectedAlpha" format="float" />
        <attr name="unselectedSaturation" format="float" />
        <attr name="unselectedScale" format="float" />
        <attr name="maxRotation" format="integer" />
        <attr name="scaleDownGravity" format="float" />
        <attr name="actionDistance" format="integer">
            <enum name="auto" value="2147483647" />
        </attr>
    </declare-styleable>
    <declare-styleable name="DiscoverItemView">
        <attr name="itemName" format="string" />
        <attr name="itemImage" format="reference" />
    </declare-styleable>
    <declare-styleable name="NumberPicker">
        <attr name="normalTextColor" format="color" />
        <attr name="normalTextSize" format="dimension" />
        <attr name="selecredTextColor" format="color" />
        <attr name="selecredTextSize" format="dimension" />
        <attr name="unitHight" format="dimension" />
        <attr name="itemNumber" format="integer" />
        <attr name="lineColor" format="color" />
        <attr name="maskHight" format="dimension" />
        <attr name="noEmpty" format="boolean" />
        <attr name="isEnable" format="boolean" />
    </declare-styleable>

    <attr name="rightPadding" format="dimension"></attr>

    <declare-styleable name="SlidingMenu">
        <attr name="rightPadding"></attr>
    </declare-styleable>

    <!-- PagerSlidingTabStrip -->
    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color" />
        <attr name="pstsUnderlineColor" format="color" />
        <attr name="pstsDividerColor" format="color" />
        <attr name="pstsIndicatorHeight" format="dimension" />
        <attr name="pstsUnderlineHeight" format="dimension" />
        <attr name="pstsDividerPadding" format="dimension" />
        <attr name="pstsTabPaddingLeftRight" format="dimension" />
        <attr name="pstsScrollOffset" format="dimension" />
        <attr name="pstsTabBackground" format="reference" />
        <attr name="pstsShouldExpand" format="boolean" />
        <attr name="pstsTextAllCaps" format="boolean" />

        
        <attr name="pstsTextSelectedColor" format="color"></attr>
        <attr name="pstsTextSelectedTextSize" format="dimension"></attr>
        <attr name="pstsCountTextColor" format="color"></attr>
        <attr name="pstsCountTextSize" format="dimension"></attr>
        <attr name="pstsCountTextBackground" format="reference" />
     
        <attr name="pstCountTextType">
            <enum name="text" value="0"></enum>
            <enum name="point" value="1"></enum>
        </attr>
    </declare-styleable>
    <declare-styleable name="TabView">
        <attr name="tabTextColor" format="color" />
        <attr name="countTextColor" format="color" />
        <attr name="tabTextSize" format="dimension"></attr>
        <attr name="countTextSize" format="dimension" />
        <attr name="tabText" format="string" />
        <attr name="countText" format="string" />
    </declare-styleable>
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

    <!-- 圆角矩形 -->
    <declare-styleable name="CircleImageView">
        <attr name="civ_border_width" format="dimension" />
        <attr name="civ_border_color" format="color" />
        <attr name="civ_border_overlay" format="boolean" />
        <attr name="civ_fill_color" format="color" />
    </declare-styleable>

    <!-- 进度条  tan ping -->
    <style name="CustomDialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowAnimationStyle">@android:style/Animation.Dialog</item>
        <item name="android:windowSoftInputMode">stateUnspecified|adjustPan</item>
    </style>

    <style name="CustomProgressDialog" parent="@style/CustomDialog">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground"> @android:color/transparent </item>
    </style>

    <!-- 宽高比布局自定义属性 -->
    <declare-styleable name="RatioImageView">

        <!-- 宽高比 -->
        <attr name="ratio" format="float" />
        <!-- 相对width height -->
        <attr name="relative">
            <enum name="width" value="0" />
            <enum name="height" value="1" />
        </attr>
    </declare-styleable>
    
    <!-- 头像集合view属性 -->
    <declare-styleable name="ZanAllHeadView">
		<attr name="number_text_color" format="color" />
		<attr name="number_boder_color" format="color" />
		<attr name="number_boder_size" format="dimension" />
		<attr name="is_average" format="boolean" />
		<attr name="is_showNum" format="boolean" />
		<attr name="is_showCutLine" format="boolean" />
		<attr name="image_size" format="dimension" />
		<attr name="image_padding" format="dimension" />
		<attr name="bg_color" format="color" />
		
    </declare-styleable>
    
    <!-- 右上角带红点textview -->
        <declare-styleable name="RedTipTextView">  
          <attr name="redTipsVisibility">  
              <enum name="invisible" value="0"></enum>  
              <enum name="visible" value="1"></enum>  
              <enum name="gone" value="2"></enum>  
          </attr>  
      </declare-styleable>  

</resources>